Maybe[T] | .Some, .val T
         | .None


Employee {
    .name str,
    .age ux,
    .salary f32,
}

add(a f32, b f32) f32

add(a=1, b=2)

Linked List:

Node {
    .content u32,
    .next | .Some, .node -> Node
          | .None
}

Node { .content = 0, .next = { .Some, -)}->
Node { .content = 1, .next = { .Some, -)}->
Node { .content = 1, .next = None }

Boolean : Copy : | .true
                 | .false

Slice[T] : Copy : {
    .len ux,
    .ptr -> (.len * T)
}

On placeholders:

.. will be used throughout the language. _ has no special meaning. ".." can also be used to drop:

.. = x
