OPERATORS


Operators are essential in programming languages. They are the building blocks for any larger operation.
In Thyn they combine two, less or more identifiers and act one them. These are all operators one by one.
The operators with the lowest binding power come first, then it gets higher and higher:


1 Equation Operator:
    a = b       Definition

2 Mutations:                                      | overloadable
    a := b      Writing

    a |= b      OR-Assign
    a >|= b     XOR-Assign
    a &= b      AND-Assign

    a += b      Addition-Assign
    a -= b      Subtraction-Assign

    a *= b      Multiplication-Assign
    a /= b      Division-Assign
    a %= b      Modulo-Assign

    a =|= b     Swapping

3 Comma Operator:
    a, b        Combining values into a list.

4 Logical Operators (lazy):
    4   a || b  Or
    5   a >|| b Xor
    6   a && b  And


7 Comparison Operators (can be chained):

    a == b      Equality
    a != b      Inequality
    a < b       Smaller
    a > b       Greater
    a <= b      Smaller or Equal
    a >= b      Greater of Equal


8 Mathematical/Binary Operators:                  | overloadable

    8   a | b   Bitwise OR
    9   a >| b  Bitwise XOR
    10  a & b   Bitwise AND

    11  a + b    Addition
        a - b    Subtraction

    12  a * b    Multiplication
        a / b    Division
        a % b    Euclidic Modulo: -10 % 3 = 2; 10 % -3 = -2

    13  -a       Negation
        +a       Double Negation

    14  User Defined Operators get defaulted here, for instance:
        Â· (dot-product),
        >< (cross-product),
        ^ (power)

15 Pipe Operator:

    15  a |> b   Piping
                 note: The precendence can be ignored while writing patterns.
    16  a <| b

17 Postfix Unary Mutations:                        | overloadable
    a++         Incrementation
    a--         Decrementation

18 Prefix Unary Operators:                         | overloadable
    !a          Invertion (bitwise & logical)
    -> a        Referencing

19 Application:
    a(b)        Calling
    a[b]        Indexing

20 Lifetime:
    'a          Lifetiming
